/**
 * This program is free software: you can redistribute it and/or modify    
 * it under the terms of the GNU General Public License as published by        
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Baptiste Mazin     <baptiste.mazin@telecom-paristech.fr> 
 * @author Guillaume Tartavel <guillaume.tartavel@telecom-paristech.fr> 
 */
(function(r,a){"use strict";var e=function(r){var a=r.getSize(0),e=r.getSize(1),t=r.getData(),i=[];for(var v=0,o=0;v<e;v++,o+=a){i[v]=t.subarray(o,a+o)}return i};var t=function(r){var a=r.getSize(0),e=r.getSize(1);var t=r.getImagData(),i=[];for(var v=0,o=0;v<e;v++,o+=a){i[v]=t.subarray(o,a+o)}return i};var i=function(a,t,i){var v=Math.min(a.getSize(1),i);var o=new r([t,i]);var f=e(o);var n=e(a);for(var s=0;s<v;s++){f[s].set(n[s].subarray(0,t))}return o};var v=function(a,i,v){var o=Math.min(a.getSize(1),v);var f=new r([i,v],undefined,true);var n=e(f);var s=t(f);var g=e(a);var u=t(a);for(var l=0;l<o;l++){n[l].set(g[l].subarray(0,i));s[l].set(u[l].subarray(0,i))}return f};var o=function(r,a,e){var t=r[a];r[a]=r[e];r[e]=t};var f=function(r,a,e,t){t.set(r[a]);r[a].set(r[e]);r[e].set(t)};var n=function(r,a){var e,t,i;i=r[a];for(e=a+1,t=r.length;e<t;e++){if(r[e]>i){a=e;i=r[e]}}return a};var s=function(r,a){var e,t,i=0;for(e=a,t=r.length;e<t;e++){i+=r[e]}return Math.sqrt(i)};var g=function(r,a){var e,t=r.length,i=new Array(t);for(e=0;e<t;e++){i[e]=r[e][a]}return i};var u=function(r,a,e){for(var t=0,i=r.length;t<i;t++){r[t][a]=e[t]}};var l=function(r,a,e,t,i,v,o){for(var f=0;f<a;f++){var n=r[f];for(var s=0,g=t;g<i;g++){s+=n[g]*e[g]}n[v]-=s;n[v]*=o}};var h=function(r,a,e,t,i,v){var o,f,n,s,g,u,l;var h=new Float64Array(i);for(o=0;o<t;o++){for(f=0,s=o;f<i;f++,s+=t){h[f]=r[s]}for(g=o,n=0;n<v;g+=t,n++){u=a[n];for(l=0,f=0;f<i;f++){l+=h[f]*u[f]}e[g]=l}}};var c=function(r,a,e,t,i,v,o,f){var n,s,g,u,l,h,c,w,m,p;var S=new Float64Array(o);for(n=0;n<v;n++){for(s=0,u=n;s<o;s++,u+=v){S[s]=r[u]}for(l=n,g=0;g<f;l+=v,g++){h=a[g];c=e[g];for(w=0,m=0,s=0;s<o;s++){p=S[s];w+=p*h[s];m+=p*c[s]}t[l]=w;i[l]=m}}};var w=function(r,a,e,t,i,v,o,f){var n,s,g,u,l,h,c,w,m;var p=new Float64Array(o);var S=new Float64Array(o);for(n=0;n<v;n++){for(s=0,u=n;s<o;s++,u+=v){p[s]=r[u];S[s]=a[u]}for(g=0,l=n;g<f;g++,l+=v){h=e[g];for(c=0,w=0,s=0;s<o;s++){m=h[s];c+=p[s]*m;w+=S[s]*m}t[l]=c;i[l]=w}}};var m=function(a,e,t,i,v,o,f,n,s){var g,u,l,h,c,w,m,p,S,y,M,D,z;var d=new r.dataType(n);var b=new r.dataType(n);for(g=0;g<f;g++){for(u=0,h=g;u<n;u++,h+=f){d[u]=a[h];b[u]=e[h]}for(c=g,l=0;l<s;c+=f,l++){w=t[l];m=i[l];for(p=0,S=0,u=0;u<n;u++){y=d[u];M=b[u];D=w[u];z=m[u];p+=y*D-M*z;S+=y*z+M*D}v[c]=p;o[c]=S}}};var p=function(r,a,t,i){var v=a.getView();var o=v.getSize(0),f=v.getSize(1),n=v.getStep(1);var s=Math.min(o,f);var g=Tools.checkType(a.getDataType());var u=t.getView();var h=u.getSize(1);var c=e(t);var w=a.getData();var m,p;var S,y;var M,D,z;var d=new g(s);var b=r?0:s-1;M=r?s:-1;var x=r?1:-1;var T=r?n+1:-n-1;for(m=b,y=m+m*n;m!==M;m+=x,y+=T){var E=i===undefined?w[y]:i[m];var I=1/E;var V=r?0:m+1;D=r?m+1:s;var C=r?0:m;var R=r?m:y;z=r?y:m+s*n;for(p=C,S=R;S<z;p++,S+=n){d[p]=w[S]}l(c,h,d,V,D,m,I)}};var S=function(r,a,i,v){var o=a.getView();var f=o.getSize(0),n=o.getSize(1),s=o.getStep(1);var g=Math.min(f,n);var u=Tools.checkType(a.getDataType());var l=i.getView();var h=l.getSize(1);var c=e(i);var w=t(i);var m=a.getData();var p,S,y,M;var D,z;var d,b,x;var T=r?0:g-1;d=r?g:-1;var E=r?1:-1;var I=r?s+1:-s-1;var V,C;var R=new u(g);for(p=T,z=p+p*s;p!==d;p+=E,z+=I){var q=v===undefined?m[z]:v[p];var U=1/q;var k=r?0:p+1;b=r?p+1:g;var A=r?0:p;var L=r?p:z;x=r?z:p+g*s;for(S=A,D=L;D<x;S++,D+=s){R[S]=m[D]}for(M=0;M<h;M++){var F=c[M];var B=w[M];for(V=0,C=0,y=k;y<b;y++){var N=R[y];V+=F[y]*N;C+=B[y]*N}F[p]-=V;B[p]-=C;F[p]*=U;B[p]*=U}}};var y=function(r,a,i,v,o){var f=a.getView();var n=f.getSize(0),s=f.getSize(1),g=f.getStep(1);var u=Math.min(n,s);var l=Tools.checkType(a.getDataType());var h=i.getView();var c=h.getSize(1);if(i.isreal()){i.toComplex()}var w=a.getRealData(),m=a.getImagData();var p=e(i),S=t(i);var y,M,D,z;var d,b;var x,T,E;var I,V,C;I=r?0:u-1;x=r?u:-1;V=r?1:-1;C=r?g+1:-g-1;var R=new l(u),q=new l(u);var U,k,A,L,F,B;for(y=I,b=y+y*g;y!==x;y+=V,b+=C){var N=v===undefined?w[b]:v[y];var j=o===undefined?m[b]:o[y];var G=1/(N*N+j*j);var H=r?0:y+1;T=r?y+1:u;var J=r?0:y;var K=r?y:b;E=r?b:y+u*g;for(M=J,d=K;d<E;M++,d+=g){R[M]=w[d];q[M]=m[d]}for(z=0;z<c;z++){var O=p[z];var P=S[z];for(U=0,k=0,D=H;D<T;D++){A=O[D];L=P[D];F=R[D];B=q[D];U+=A*F-L*B;k+=L*F+A*B}A=O[y]-U;L=P[y]-k;O[y]=(A*N+L*j)*G;P[y]=(L*N-A*j)*G}}};var M=function(r,a,e,t,i){if(a.isreal()){if(e.isreal()){p(r,a,e,t)}else{S(r,a,e,t)}}else{y(r,a,e,t,i)}return e};var D=function(r,a){var e,t,i,v,o,f,n;for(e=0;e<a;e++){v=r[e];for(f=0,t=0;t<e;t++){f+=v[t]*v[t]}if(v[e]-f<0){throw new Error("Matrix.chol: Input must be positive definite.")}v[e]=Math.sqrt(v[e]-f);n=1/v[e];for(t=e+1;t<a;t++){v[t]=0}for(i=e+1;i<a;i++){o=r[i];for(f=0,t=0;t<e;t++){f+=o[t]*v[t]}o[e]-=f;o[e]*=n}}};var z=function(r,a,e){var t,i,v,o;var f,n,s,g,u,l;var h,c,w,m;for(h=0;h<e;h++){t=r[h];i=a[h];for(f=0,c=0;c<h;c++){u=t[c];l=i[c];f+=u*u+l*l}if(t[h]-f<0){throw new Error("Matrix.chol: Input must be positive definite.")}if(i[h]!==0){throw new Error("Matrix.chol: Diagonal must be real positive.")}t[h]=Math.sqrt(t[h]-f);i[h]=0;m=1/(t[h]*t[h]);for(c=h+1;c<e;c++){t[c]=0;i[c]=0}for(w=h+1;w<e;w++){v=r[w];o=a[w];for(f=0,n=0,c=0;c<h;c++){s=v[c];g=o[c];u=t[c];l=i[c];f+=s*u+g*l;n+=g*u-s*l}v[h]-=f;o[h]-=n;s=v[c];g=o[c];u=t[c];l=i[c];v[h]=(s*u+g*l)*m;o[h]=(g*u-s*l)*m}}};var d=function(r,a,e,t){var i,v,f,n=Math.abs,s=1;for(f=0;f<e;f++){var g=r[f];var u=f;for(i=f+1;i<a;i++){if(n(g[i])>n(g[u])){u=i}}if(u!==f){for(v=0;v<e;v++){o(r[v],u,f)}o(t,u,f);s=-s}var l=1/g[f];for(i=f+1;i<a;i++){g[i]*=l}for(v=f+1;v<e;v++){var h=r[v];l=h[f];for(i=f+1;i<a;i++){h[i]-=g[i]*l}}}};var b=function(r){var a=r.getCopy();var e=a.getView();var t=e.getStep(1),i=e.getSize(0),v=e.getSize(1);var f,n,s,g,u;var l=Tools.checkType(r.getDataType());var h=new l(r.getSize(0)),c=1;for(s=0;s<i;s++){h[s]=s}if(a.isreal()){var w=a.getData(),m=[];for(f=0,n=0;f<v;n+=t,f++){m[f]=w.subarray(n,i+n)}d(m,i,v,h)}else{var p=a.getRealData(),S=[],y,M,D;var z=a.getImagData(),b=[],x,T,E;for(f=0,n=0;f<v;n+=t,f++){S[f]=p.subarray(n,i+n);b[f]=z.subarray(n,i+n)}var I,V,C,R,q;for(f=0;f<v;f++){y=S[f];x=b[f];u=f;for(s=f+1;s<i;s++){V=y[s];C=x[s];R=y[u];q=x[u];if(V*V+C*C>R*R+q*q){u=s}}if(u!==f){for(g=0;g<v;g++){o(S[g],u,f);o(b[g],u,f)}o(h,u,f);c=-c}D=y[f];E=x[f];I=D*D+E*E;D=D/I;E=-E/I;for(s=f+1;s<i;s++){V=y[s];C=x[s];y[s]=V*D-C*E;x[s]=V*E+C*D}for(g=f+1;g<v;g++){M=S[g];T=b[g];D=M[f];E=T[f];for(s=f+1;s<i;s++){V=y[s];C=x[s];M[s]-=V*D-C*E;T[s]-=C*D+V*E}}}}return{LU:a,piv:h,pivsign:c}};var x=function(r){var a=r.getView(),e=r.getData();var t=a.getSize(0);var i,v,o;for(i=0,v=t*t,o=t+1;i<v;i+=o){if(e[i]===0){return false}}return true};var T=function(a,e){var t,i;var v=a.LU.getSize(0);var o=a.LU.getSize(1);if(v===o){t=a.LU.getCopy();i=a.LU.getCopy()}else if(v<o){t=a.LU.get([],[0,v-1]);i=a.LU.get([0,v-1],[])}else{t=a.LU.get([],[0,o-1]);i=a.LU.get([0,o-1],[])}var f,n;var s,g;var u,l,h;var c;var w,m,p;f=t.getView();n=f.getEnd(0);s=f.getStep(1);g=f.getEnd(1);if(a.LU.isreal()){var S=t.getData();for(l=0,h=0,m=g,l=0;h<m;l++,h+=s){for(c=h,p=l+h;c<p;c++){S[c]=0}S[c]=1}}else{var y=t.getRealData(),M=t.getImagData();for(l=0,h=0,m=g,l=0;h<m;l++,h+=s){for(c=h,p=l+h;c<p;c++){y[c]=0;M[c]=0}y[c]=1;M[c]=0}}f=i.getView();n=f.getEnd(0);s=f.getStep(1);g=f.getEnd(1);if(a.LU.isreal()){var D=i.getData();for(l=0,h=0,m=g,l=0;h<m;l++,h+=s){for(c=l+1+h,p=n+h;c<p;c++){D[c]=0}}}else{var z=i.getRealData(),d=i.getImagData();for(l=0,h=0,m=g,l=0;h<m;l++,h+=s){for(c=l+1+h,p=n+h;c<p;c++){z[c]=0;d[c]=0}}}var b=a.piv;if(e===false){var x=Tools.checkType(t.getDataType());var T=new x(v);for(u=0,w=b.length;u<w;u++){T[b[u]]=u}t=t.get([T]);return[t,i]}e=new r([v,v]);var E=e.getData();f=e.getView();n=f.getEnd(0);s=f.getStep(1);g=f.getEnd(1);for(u=0;u<v;u++){E[u+b[u]*s]=1}return[t,i,e]};var E=function(a,e){var t=b(a);var i=t.LU,v=t.piv;if(!x(i)){throw new Error("Matrix.mldivide: Matrix is singular.")}e=e.get([v]);var o=r.ones(i.getSize(0)).getData();var f=r.zeros(i.getSize(0)).getData();M(true,i,e,o,f);return M(false,i,e)};var I=function(r,a){var e,t=r.length;var i=-Infinity,v;for(e=a;e<t;e++){v=Math.abs(r[e]);if(v>i){i=v}}var o=i!==0?1/i:0;var f=0,n=r[a]*o;for(r[a]=1,e=a+1;e<t;e++){r[e]*=o;f+=r[e]*r[e]}var s=Math.sqrt(n*n+f);var g=n>0?1:-1;var u=n+g*s;var l=u*u;var h=2*l/(f+l);var c=1/u;for(e=a+1;e<t;e++){r[e]*=c}r[a]=-g*s*i;return h};var V=function(r,a,e,t,i){var v,o,f=a.length,n=a[0].length;var s,g;for(o=i;o<f;o++){g=a[o];for(s=g[t],v=t+1;v<n;v++){s+=r[v]*g[v]}s*=e;for(g[t]-=s,v=t+1;v<n;v++){g[v]-=r[v]*s}}};var C=function(r,a,e){var t,i=r.length,v,o;var f=-Infinity,n;for(t=e;t<i;t++){n=Math.abs(r[t])+Math.abs(a[t]);if(n>f){f=n}}var s=f!==0?1/f:0;var g=0,u=r[e]*s,l=a[e]*s;for(r[e]=1,a[e]=0,t=e+1;t<i;t++){r[t]*=s;a[t]*=s;v=r[t];o=a[t];g+=v*v+o*o}var h=Math.sqrt(u*u+l*l+g),c=Math.atan2(l,u);var w=u+h*Math.cos(c),m=l+h*Math.sin(c);var p=w*w+m*m;var S=2*p/(g+p);n=1/(w*w+m*m);var y=w*n,M=-m*n;for(t=e+1;t<i;t++){v=r[t];o=a[t];r[t]=v*y-o*M;a[t]=o*y+v*M}r[e]=-h*f*Math.cos(c);a[e]=-h*f*Math.sin(c);return S};var R=function(r,a,e,t,i,v,o){var f,n;var s,g,u=e.length,l=e[0].length;var h,c;for(g=o;g<u;g++){h=e[g];c=t[g];for(f=h[v],n=c[v],s=v+1;s<l;s++){f+=r[s]*h[s]+a[s]*c[s];n+=r[s]*c[s]-a[s]*h[s]}f*=i;n*=i;for(h[v]-=f,c[v]-=n,s=v+1;s<l;s++){h[s]-=r[s]*f-a[s]*n;c[s]-=a[s]*f+r[s]*n}}};var q=function(r,a,e,t,i){var v,o,f,n=a.length,s=a[0].length;for(o=i;o<s;o++){for(v=a[t][o],f=t+1;f<n;f++){v+=r[f]*a[f][o]}v*=e;for(a[t][o]-=v,f=t+1;f<n;f++){a[f][o]-=r[f]*v}}};var U=function(r,a,e,t,i,v,o){var f,n;var s,g,u=e.length,l=e[0].length;for(s=o;s<l;s++){for(f=e[v][s],n=t[v][s],g=v+1;g<u;g++){f+=r[g]*e[g][s]+a[g]*t[g][s];n+=r[g]*t[g][s]-a[g]*e[g][s]}f*=i;n*=i;for(e[v][s]-=f,t[v][s]-=n,g=v+1;g<u;g++){e[g][s]-=r[g]*f-a[g]*n;t[g][s]-=a[g]*f+r[g]*n}}};var k=function(r){r=r.getCopy();var a=Tools.checkType(r.getDataType());var i=r.getView();var v=i.getSize(1);var o;var f=new a(v),n=new a(v);if(r.isreal()){var s=e(r);for(o=0;o<v;o++){f[o]=I(s[o],o);V(s[o],s,f[o],o,o+1);if(o<v-2){var l=g(s,o);n[o]=I(l,o+1);u(s,o,l);q(l,s,n[o],o+1,o+1)}}}else{var h=e(r),c=t(r);for(o=0;o<v;o++){f[o]=C(h[o],c[o],o);R(h[o],c[o],h,c,f[o],o,o+1);if(o<v-2){var w=g(h,o);var m=g(c,o);n[o]=C(w,m,o+1);u(h,o,w);u(c,o,m);U(w,m,h,c,n[o],o+1,o+1)}}}return[r,f,n]};var A=function(a){var i=a[1];a=a[0];var v=a.getSize(0),o=a.getSize(1);var f=r.eye(v);var n=f.getView(),s=n.getStep(1);var g,u;if(a.isreal()){var l=e(f);var h=a.getData();for(g=o-1,u=s*g;g>=0;g--,u-=s){var c=h.subarray(u,v+u);V(c,l,i[g],g,g)}}else{f.toComplex();var w=e(f),m=t(f);var p=a.getRealData(),S=a.getImagData();for(g=o-1,u=s*g;g>=0;g--,u-=s){var y=p.subarray(u,v+u);var M=S.subarray(u,v+u);R(y,M,w,m,i[g],g,g)}}return f};var L=function(r){return r[0].triu().tril(1)};var F=function(a){var i=a[2];a=a[0].transpose();var v=a.getSize(0),o=a.getSize(1);var f=r.eye(v);var n=f.getView(),s=n.getStep(1);var g,u;if(a.isreal()){var l=e(f);var h=a.getData();for(g=o-1,u=s*g;g>=0;g--,u-=s){var c=h.subarray(u,v+u);V(c,l,i[g],g+1,g+1)}}else{f.toComplex();var w=e(f),m=t(f);var p=a.getRealData(),S=a.getImagData();for(g=v-3,u=s*g;g>=0;g--,u-=s){var y=p.subarray(u,v+u);var M=S.subarray(u,v+u);R(y,M,w,m,i[g],g+1,g+1)}}return f.transpose()};var B=function(r){return[A(r),L(r),F(r)]};r.golubStep=function(r,a){var e=t11-r;var t=t12;for(var i=0,v=a-1;i<v;i++){}};var N=function(r){var a=r[0].getCopy();var e=a.getView();var t=e.getStep(1),i=e.getEnd(0);var v=e.getSize(0),o=e.getSize(1);var f,n,s,g,u;if(a.isreal()){var l=a.getData();for(f=0,n=0,g=0;f<v;f++,n+=t,g=f+n){for(s=g+1,u=i+n;s<u;s++){l[s]=0}}for(;f<o;f++,n+=t,g=f+n){for(s=g+1,u=i+n;s<u;s++){l[s]=0}}}else{var h=a.getRealData(),c=a.getImagData();for(f=0,n=0,g=0;f<v;f++,n+=t,g=f+n){for(s=g+1,u=i+n;s<u;s++){h[s]=0;c[s]=0}}for(;f<o;f++,n+=t,g=f+n){for(s=g+1,u=i+n;s<u;s++){h[s]=0;c[s]=0}}}return a};var j=function(a){var i=a[1];a=a[0];var v=a.getSize(0),o=a.getSize(1);var f=r.eye(v);var n=f.getView(),s=n.getStep(1);var g,u;if(a.isreal()){var l=e(f);var h=a.getData();for(g=o-1,u=s*g;g>=0;g--,u-=s){var c=h.subarray(u,v+u);V(c,l,i[g],g,g)}}else{f.toComplex();var w=e(f);var m=t(f);var p=a.getRealData(),S=a.getImagData();for(g=o-1,u=s*g;g>=0;g--,u-=s){var y=p.subarray(u,v+u);var M=S.subarray(u,v+u);R(y,M,w,m,i[g],g,g)}}return f};var G=function(a){var e=a[2];var t=e.length;var i=new r([t,t]);var v=i.getView(),o=i.getData();var f=v.getStep(1);var n=t;var s,g;for(s=0,g=0;s<n;s++,g+=f){o[e[s]+g]=1}return i};var H=function(r,a){var i;var v=2.220446049250313e-16||1.19209289550781e-7;var g=r.getCopy();var u=g.getView();var l=u.getSize(0),h=u.getSize(1);var c,w,m;var p=Tools.checkType(r.getDataType());var S=new p(l);var y=new p(h);var M=new p(h);var D=new p(h),z,d;if(g.isreal()){var b=e(g);if(a){for(w=0;w<h;w++){var x=b[w];for(m=0,c=0;c<l;c++){m+=x[c]*x[c]}y[w]=m;M[w]=w}i=s(y,0)}for(z=0;z<h;z++){if(a){d=n(y,z);if(s(y,z)<=i*v){return[g,D,M,z]}else if(z!==d){f(b,z,d,S);o(y,z,d);o(M,z,d)}}D[z]=I(b[z],z);V(b[z],b,D[z],z,z+1);if(a){for(c=z+1;c<h;c++){y[c]-=b[c][z]*b[c][z]}}}}else{var T=e(g);var E=t(g);if(a){for(w=0;w<h;w++){var q=T[w],U=E[w];for(m=0,c=0;c<l;c++){m+=q[c]*q[c]+U[c]*U[c]}y[w]=m;M[w]=w}i=s(y,0)}for(z=0;z<h;z++){if(a){d=n(y,z);if(s(y,z)<=i*v){return[g,D,M,z+1]}else if(z!==d){f(T,z,d,S);f(E,z,d,S);o(y,z,d);o(M,z,d)}}D[z]=C(T[z],E[z],z);R(T[z],E[z],T,E,D[z],z,z+1);if(a){for(c=z+1;c<h;c++){y[c]-=T[c][z]*T[c][z]+E[c][z]*E[c][z]}}}}return[g,D,M,z]};var J=function(r,a){var o=H(r,true);var f=o[1];var n=o[2];o=o[0];var s=r.getSize(0),g=r.getSize(1),u=a.getSize(1);var l=Math.min(s,g);a=a.getCopy();var h,c;if(o.isreal()&&a.isreal()){var w=e(a);var m=e(o);for(h=0;h<g;h++){V(m[h],w,f[h],h,0)}M(false,o,a);c=i(a,l,u)}else{if(o.isreal()){o.toComplex()}if(a.isreal()){a.toComplex()}var p=e(a);var S=t(a);var y=e(o);var D=t(o);for(h=0;h<g;h++){R(y[h],D[h],p,S,f[h],h,0)}M(false,o,a);c=v(a,l,u)}var z=new Uint32Array(l);var d,b;for(d=0,b=n.length;d<b;d++){z[n[d]]=d}return c.get([z])};var K=function(r,a){var o=H(r.ctranspose(),true);var f=o[1];var n=o[2];o=o[0];var s;var g=o.getSize(0),u=o.getSize(1),l=a.getSize(1);var h=Math.min(g,u);var c=new Uint32Array(h);for(var w=0,m=n.length;w<m;w++){c[n[w]]=w}a=a.get([c]);var p=M(true,o.ctranspose(),a);if(o.isreal()&&a.isreal()){p=i(p,g,l);var S=e(p);var y=e(o);for(s=u-1;s>=0;s--){V(y[s],S,f[s],s,0)}}else{if(o.isreal()){o.toComplex()}if(p.isreal()){p.toComplex()}p=v(p,g,l);var D=e(p);var z=t(p);var d=e(o);var b=t(o);for(s=u-1;s>=0;s--){R(d[s],b[s],D,z,f[s],s,0)}}return p};var O=function(r,a){if(r.getSize(0)<r.getSize(1)){return K(r,a)}return J(r,a)};a.mtimes=function(a){a=r.toMatrix(a);if(!this.ismatrix()||!a.ismatrix()){throw new Error("Matrix.mtimes: mtimes is undefined for ND array.")}var i=this.getSize(0);var v=this.getSize(1);var o=a.getSize(1);if(i!==a.getSize(0)){throw new Error("Matrix.mtimes: Matrix sizes must match.")}var f=this.isreal()&a.isreal()?false:true;var n=Tools.checkType(this.getDataType());var s=new r([i,o],n,f);if(this.isreal()){if(a.isreal()){h(this.getData(),e(a),s.getData(),i,v,o)}else{c(this.getData(),e(a),t(a),s.getRealData(),s.getImagData(),i,v,o)}}else{if(a.isreal()){w(this.getRealData(),this.getImagData(),e(a),s.getRealData(),s.getImagData(),i,v,o)}else{m(this.getRealData(),this.getImagData(),e(a),t(a),s.getRealData(),s.getImagData(),i,v,o)}}return s};r.mtimes=function(a,e){return r.toMatrix(a).mtimes(e)};a["*"]=a.mtimes;a.chol=function(r){if(!this.ismatrix()){throw new Error("Matrix.chol: Input must be a matrix.")}if(!this.issquare()){throw new Error("Matrix.chol: Matrix must be square.")}if(r==="lower"){r=true}else if(r==="upper"||r===undefined){r=false}else{throw new Error("Matrix.chol: Invalid parameters.")}var a=this.getCopy();if(a.isreal()){D(e(a),a.getSize(1))}else{z(e(a),t(a),a.getSize(1))}return r?a.ctranspose(a):a};a.inv=function(){return this.mldivide(r.eye(this.getSize()))};a.det=function(){if(!this.issquare()){throw new Error("Matrix.det: Matrix must be square.")}var a=b(this);var e=a.LU;var t,i,v;var o=e.getView();var f=o.getSize(0);if(this.isreal()){var n=a.pivsign;var s=e.getData();for(t=0,i=f*f,v=f+1;t<i;t+=v){n*=s[t]}return new r([1,1],[n])}var g=e.getRealData();var u=e.getImagData();var l=a.pivsign,h=0;for(t=0,i=f*f,v=f+1;t<i;t+=v){l=l*g[t]-h*u[t];h=l*u[t]+h*g[t]}return new r([1,1],[l,h],true)};a.rank=function(){var r=H(this,true);return r[3]};a.lu=function(){return T(b(this),false)};a.lup=function(){return T(b(this),true)};a.qrp=function(){var r=H(this,true);return[j(r),N(r),G(r)]};a.qr=function(){var r=H(this,false);return[j(r),N(r)]};a.mldivide=function(r){if(!this.ismatrix()||!r.ismatrix()){throw new Error("1 Matrix.mldivide: Both arguments must be Matrix.")}if(r.getSize(0)!==this.getSize(0)){throw new Error("2 Matrix.mldivide: Row dimensions must agree.")}return O(this,r.getCopy())};a.mrdivide=function(r){if(!this.ismatrix()||!r.ismatrix()){throw new Error("Matrix.mrdivide: Both arguments must be Matrix.")}if(r.getSize(0)!==this.getSize(0)){throw new Error("Matrix.mrdivide: Row dimensions must agree.")}return O(r.ctranspose(),this.ctranspose()).ctranspose()};a.bidiag=function(){var r=k(this.getCopy());return B(r)};a.svd=function(){var a;var e=Math.pow(2,-52);var t=1e-64/e;var i=50;var v=0,o=0,f=0,n=0,s=0;var g=this.toArray();var u=g.length;var l=g[0].length;if(u<l){throw"Matrix.svd: Need more rows than columns"}var h=new Array(l);var c=new Array(l);for(o=0;o<l;o++){h[o]=0;c[o]=0}var w=r.zeros(l).toArray();var m=function(r,a){r=Math.abs(r);a=Math.abs(a);if(r>a){return r*Math.sqrt(1+a*a/r/r)}else if(a===0){return r}return a*Math.sqrt(1+r*r/a/a)};var p=0,S=0,y=0,M=0,D=0,z=0,d=0;for(o=0;o<l;o++){h[o]=S;d=0;s=o+1;for(f=o;f<u;f++){d+=g[f][o]*g[f][o]}if(d<=t){S=0}else{p=g[o][o];S=Math.sqrt(d);if(p>=0){S=-S}y=p*S-d;g[o][o]=p-S;for(f=s;f<l;f++){d=0;for(n=o;n<u;n++){d+=g[n][o]*g[n][f]}p=d/y;for(n=o;n<u;n++){g[n][f]+=p*g[n][o]}}}c[o]=S;d=0;for(f=s;f<l;f++){d=d+g[o][f]*g[o][f]}if(d<=t){S=0}else{p=g[o][o+1];S=Math.sqrt(d);if(p>=0){S=-S}y=p*S-d;g[o][o+1]=p-S;for(f=s;f<l;f++){h[f]=g[o][f]/y}for(f=s;f<u;f++){d=0;for(n=s;n<l;n++){d+=g[f][n]*g[o][n]}for(n=s;n<l;n++){g[f][n]+=d*h[n]}}}D=Math.abs(c[o])+Math.abs(h[o]);if(D>M){M=D}}for(o=l-1;o!=-1;o+=-1){if(S!==0){y=S*g[o][o+1];for(f=s;f<l;f++){w[f][o]=g[o][f]/y}for(f=s;f<l;f++){d=0;for(n=s;n<l;n++){d+=g[o][n]*w[n][f]}for(n=s;n<l;n++){w[n][f]+=d*w[n][o]}}}for(f=s;f<l;f++){w[o][f]=0;w[f][o]=0}w[o][o]=1;S=h[o];s=o}for(o=l-1;o!=-1;o+=-1){s=o+1;S=c[o];for(f=s;f<l;f++){g[o][f]=0}if(S!==0){y=g[o][o]*S;for(f=s;f<l;f++){d=0;for(n=s;n<u;n++){d+=g[n][o]*g[n][f]}p=d/y;for(n=o;n<u;n++){g[n][f]+=p*g[n][o]}}for(f=o;f<u;f++){g[f][o]=g[f][o]/S}}else{for(f=o;f<u;f++){g[f][o]=0}}g[o][o]+=1}e=e*M;var b;for(n=l-1;n!=-1;n+=-1){for(b=0;b<i;b++){var x=false;for(s=n;s!=-1;s+=-1){if(Math.abs(h[s])<=e){x=true;break}if(Math.abs(c[s-1])<=e){break}}if(!x){v=0;d=1;var T=s-1;for(o=s;o<n+1;o++){p=d*h[o];h[o]=v*h[o];if(Math.abs(p)<=e){break}S=c[o];y=m(p,S);c[o]=y;v=S/y;d=-p/y;for(f=0;f<u;f++){D=g[f][T];z=g[f][o];g[f][T]=D*v+z*d;g[f][o]=-D*d+z*v}}}z=c[n];if(s===n){if(z<0){c[n]=-z;for(f=0;f<l;f++){w[f][n]=-w[f][n]}}break}if(b>=i-1){throw"Error: no convergence."}M=c[s];D=c[n-1];S=h[n-1];y=h[n];p=((D-z)*(D+z)+(S-y)*(S+y))/(2*y*D);S=m(p,1);if(p<0){p=((M-z)*(M+z)+y*(D/(p-S)-y))/M}else{p=((M-z)*(M+z)+y*(D/(p+S)-y))/M}v=1;d=1;for(o=s+1;o<n+1;o++){S=h[o];D=c[o];y=d*S;S=v*S;z=m(p,y);h[o-1]=z;v=p/z;d=y/z;p=M*v+S*d;S=-M*d+S*v;y=D*d;D=D*v;for(f=0;f<l;f++){M=w[f][o-1];z=w[f][o];w[f][o-1]=M*v+z*d;w[f][o]=-M*d+z*v}z=m(p,y);c[o-1]=z;v=p/z;d=y/z;p=v*S+d*D;M=-d*S+v*D;for(f=0;f<u;f++){D=g[f][o-1];z=g[f][o];g[f][o-1]=D*v+z*d;g[f][o]=-D*d+z*v}}h[s]=0;h[n]=p;c[n]=M}}for(o=0;o<c.length;o++){if(c[o]<e){c[o]=0}}for(o=0;o<l;o++){for(f=o-1;f>=0;f--){if(c[f]<c[o]){v=c[f];c[f]=c[o];c[o]=v;for(n=0;n<g.length;n++){a=g[n][o];g[n][o]=g[n][f];g[n][f]=a}for(n=0;n<w.length;n++){a=w[n][o];w[n][o]=w[n][f];w[n][f]=a}o=f}}}return[r.fromArray(g).transpose(),r.diag(r.toMatrix(c)),r.fromArray(w).transpose()]}})(Matrix,Matrix.prototype);